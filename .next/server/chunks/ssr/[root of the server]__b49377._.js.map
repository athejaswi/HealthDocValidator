{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/aarushithejaswi/Documents/GitHub/ai-tax-clearance-verification/lib/textract.js"],"sourcesContent":["import { TextractClient, AnalyzeDocumentCommand } from \"@aws-sdk/client-textract\";\nimport { fromCognitoIdentityPool } from \"@aws-sdk/credential-providers\";\n\nconst textractClient = new TextractClient({\n  region: process.env.NEXT_PUBLIC_AWS_REGION,\n  credentials: fromCognitoIdentityPool({\n    identityPoolId: process.env.NEXT_PUBLIC_AWS_IDENTITY_POOL_ID,\n    clientConfig: { region: process.env.NEXT_PUBLIC_AWS_REGION },\n  }),\n});\n\nexport const analyzeDocumentFromBuffer = async (fileBuffer) => {\n  try {\n    const params = {\n      Document: {\n        Bytes: fileBuffer,\n      },\n      FeatureTypes: [\"FORMS\", \"TABLES\", \"SIGNATURES\"], // Added SIGNATURES feature\n    };\n\n    const command = new AnalyzeDocumentCommand(params);\n    const response = await textractClient.send(command);\n\n    return response;\n  } catch (error) {\n    console.error(\"Error analyzing document:\", error);\n    throw error;\n  }\n};"],"names":[],"mappings":";;;;;;;;;;;;;;;AAGA,MAAM,iBAAiB,IAAI,eAAe;IACxC,MAAM;IACN,aAAa,wBAAwB;QACnC,cAAc;QACd,cAAc;YAAE,MAAM;QAAqC;IAC7D;AACF;AAEO,MAAM,4BAA4B,OAAO;IAC9C,IAAI;QACF,MAAM,SAAS;YACb,UAAU;gBACR,OAAO;YACT;YACA,cAAc;gBAAC;gBAAS;gBAAU;aAAa;QACjD;QAEA,MAAM,UAAU,IAAI,uBAAuB;QAC3C,MAAM,WAAW,MAAM,eAAe,IAAI,CAAC;QAE3C,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,MAAM;IACR;AACF"}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":["file:///Users/aarushithejaswi/Documents/GitHub/ai-tax-clearance-verification/app/page.js"],"sourcesContent":["'use client';\n\nimport React, { useState } from \"react\";\nimport { analyzeDocumentFromBuffer } from \"../lib/textract\";\n\nexport default function Home() {\n  const [file, setFile] = useState(null);\n  const [result, setResult] = useState(null);\n  const [missingFields, setMissingFields] = useState([]);\n\n  const handleFileUpload = async (e) => {\n    const uploadedFile = e.target.files[0];\n\n    if (!uploadedFile) return;\n\n    const fileArrayBuffer = await uploadedFile.arrayBuffer();\n    const fileBuffer = new Uint8Array(fileArrayBuffer);\n\n    try {\n      const textractResult = await analyzeDocumentFromBuffer(fileBuffer);\n      setResult(textractResult);\n\n      const missing = checkForKeywords(textractResult);\n      setMissingFields(missing);\n    } catch (error) {\n      console.error(\"Error processing document:\", error);\n    }\n  };\n\n  const checkForKeywords = (textractResult) => {\n    const missing = [];\n    const textBlocks = textractResult.Blocks.filter(block => block.BlockType === 'LINE');\n    const documentText = textBlocks.map(block => block.Text).join(\" \").toLowerCase();\n\n    const keywords = [\n      { keyword: \"State of New Jersey\", label: \"State of New Jersey\" },\n      { keyword: \"Clearance Certificate\", label: \"Tax Clearance Certificate\" },\n    ];\n\n    keywords.forEach(({ keyword, label }) => {\n      if (!documentText.includes(keyword.toLowerCase())) {\n        missing.push(label);\n      }\n    });\n\n    // Enhanced signature detection\n    const hasSignature = checkForSignature(textractResult.Blocks);\n    if (!hasSignature) {\n      missing.push(\"Signature\");\n    }\n\n    return missing;\n  };\n\n  // New function specifically for signature detection\n  const checkForSignature = (blocks) => {\n    // Check for explicit SIGNATURE block type\n    const signatureBlocks = blocks.filter(block => \n      block.BlockType === 'SIGNATURE'\n    );\n\n    if (signatureBlocks.length > 0) {\n      return true;\n    }\n\n    // Fallback: Check for signature-related entities\n    const signatureEntities = blocks.filter(block =>\n      block.EntityTypes?.includes('SIGNATURE')\n    );\n\n    if (signatureEntities.length > 0) {\n      return true;\n    }\n\n    // Additional fallback: Check for signature fields in forms\n    const formFields = blocks.filter(block => \n      block.BlockType === 'KEY_VALUE_SET' &&\n      block.EntityTypes?.includes('KEY')\n    );\n\n    const signatureField = formFields.some(field => {\n      const childBlocks = blocks.filter(block =>\n        field.Relationships?.some(rel =>\n          rel.Type === 'CHILD' && rel.Ids.includes(block.Id)\n        )\n      );\n      \n      const fieldText = childBlocks\n        .map(block => block.Text?.toLowerCase() || '')\n        .join(' ');\n\n      return fieldText.includes('signature') || fieldText.includes('signed');\n    });\n\n    return signatureField;\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Amazon Textract Document Analysis</h1>\n      <input type=\"file\" onChange={handleFileUpload} />\n\n      {missingFields.length > 0 && (\n        <div>\n          <h2>Missing Fields:</h2>\n          <ul>\n            {missingFields.map((field, index) => (\n              <li key={index}>{field} is missing</li>\n            ))}\n          </ul>\n        </div>\n      )}\n\n      {result && (\n        <div>\n          <h2>Extracted Text Blocks:</h2>\n          <pre>{JSON.stringify(result.Blocks, null, 2)}</pre>\n        </div>\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKe,SAAS;IACtB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IAErD,MAAM,mBAAmB,OAAO;QAC9B,MAAM,eAAe,EAAE,MAAM,CAAC,KAAK,CAAC,EAAE;QAEtC,IAAI,CAAC,cAAc;QAEnB,MAAM,kBAAkB,MAAM,aAAa,WAAW;QACtD,MAAM,aAAa,IAAI,WAAW;QAElC,IAAI;YACF,MAAM,iBAAiB,MAAM,CAAA,GAAA,+GAAA,CAAA,4BAAyB,AAAD,EAAE;YACvD,UAAU;YAEV,MAAM,UAAU,iBAAiB;YACjC,iBAAiB;QACnB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,8BAA8B;QAC9C;IACF;IAEA,MAAM,mBAAmB,CAAC;QACxB,MAAM,UAAU,EAAE;QAClB,MAAM,aAAa,eAAe,MAAM,CAAC,MAAM,CAAC,CAAA,QAAS,MAAM,SAAS,KAAK;QAC7E,MAAM,eAAe,WAAW,GAAG,CAAC,CAAA,QAAS,MAAM,IAAI,EAAE,IAAI,CAAC,KAAK,WAAW;QAE9E,MAAM,WAAW;YACf;gBAAE,SAAS;gBAAuB,OAAO;YAAsB;YAC/D;gBAAE,SAAS;gBAAyB,OAAO;YAA4B;SACxE;QAED,SAAS,OAAO,CAAC,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE;YAClC,IAAI,CAAC,aAAa,QAAQ,CAAC,QAAQ,WAAW,KAAK;gBACjD,QAAQ,IAAI,CAAC;YACf;QACF;QAEA,+BAA+B;QAC/B,MAAM,eAAe,kBAAkB,eAAe,MAAM;QAC5D,IAAI,CAAC,cAAc;YACjB,QAAQ,IAAI,CAAC;QACf;QAEA,OAAO;IACT;IAEA,oDAAoD;IACpD,MAAM,oBAAoB,CAAC;QACzB,0CAA0C;QAC1C,MAAM,kBAAkB,OAAO,MAAM,CAAC,CAAA,QACpC,MAAM,SAAS,KAAK;QAGtB,IAAI,gBAAgB,MAAM,GAAG,GAAG;YAC9B,OAAO;QACT;QAEA,iDAAiD;QACjD,MAAM,oBAAoB,OAAO,MAAM,CAAC,CAAA,QACtC,MAAM,WAAW,EAAE,SAAS;QAG9B,IAAI,kBAAkB,MAAM,GAAG,GAAG;YAChC,OAAO;QACT;QAEA,2DAA2D;QAC3D,MAAM,aAAa,OAAO,MAAM,CAAC,CAAA,QAC/B,MAAM,SAAS,KAAK,mBACpB,MAAM,WAAW,EAAE,SAAS;QAG9B,MAAM,iBAAiB,WAAW,IAAI,CAAC,CAAA;YACrC,MAAM,cAAc,OAAO,MAAM,CAAC,CAAA,QAChC,MAAM,aAAa,EAAE,KAAK,CAAA,MACxB,IAAI,IAAI,KAAK,WAAW,IAAI,GAAG,CAAC,QAAQ,CAAC,MAAM,EAAE;YAIrD,MAAM,YAAY,YACf,GAAG,CAAC,CAAA,QAAS,MAAM,IAAI,EAAE,iBAAiB,IAC1C,IAAI,CAAC;YAER,OAAO,UAAU,QAAQ,CAAC,gBAAgB,UAAU,QAAQ,CAAC;QAC/D;QAEA,OAAO;IACT;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;0BAAG;;;;;;0BACJ,8OAAC;gBAAM,MAAK;gBAAO,UAAU;;;;;;YAE5B,cAAc,MAAM,GAAG,mBACtB,8OAAC;;kCACC,8OAAC;kCAAG;;;;;;kCACJ,8OAAC;kCACE,cAAc,GAAG,CAAC,CAAC,OAAO,sBACzB,8OAAC;;oCAAgB;oCAAM;;+BAAd;;;;;;;;;;;;;;;;YAMhB,wBACC,8OAAC;;kCACC,8OAAC;kCAAG;;;;;;kCACJ,8OAAC;kCAAK,KAAK,SAAS,CAAC,OAAO,MAAM,EAAE,MAAM;;;;;;;;;;;;;;;;;;AAKpD"}},
    {"offset": {"line": 218, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///Users/aarushithejaswi/Documents/GitHub/ai-tax-clearance-verification/node_modules/next/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n    } else if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n    } else if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":";AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,uBAA2B,EAAF;;IAQzC,OAAO;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1CJ,OAAOC,OAAO,GAAGC,QAAQ;QAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACO,SAAS,EAAE;;QAIlC;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 242, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 247, "column": 0}, "map": {"version":3,"sources":["file:///Users/aarushithejaswi/Documents/GitHub/ai-tax-clearance-verification/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,0HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0]}},
    {"offset": {"line": 249, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 254, "column": 0}, "map": {"version":3,"sources":["file:///Users/aarushithejaswi/Documents/GitHub/ai-tax-clearance-verification/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored['react-ssr'].React\n"],"names":["module","exports","require","vendored","React"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,0HAAyBC,QAAQ,CAAC,YAAY,CAACC,KAAK","ignoreList":[0]}},
    {"offset": {"line": 256, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}